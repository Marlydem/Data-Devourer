#To parse the data file and return values#
# TRIAL Three-hundred twenty-seven   #
"""ORIGINAL CODE
import csv
import os.path

userhome = os.path.expanduser('~')
csvfile= os.path.join(userhome,"Desktop/C3PO_for_H2D2", 'complete_sinbad_photometric_.csv')
SINBADtable_file= open(csvfile, "r")
SINBADtable = csv.reader(SINBADtable_file)
for row in SINBADtable:
    print row
f.close
"""
#Basic Open File
import csv
import os.path

userhome = os.path.expanduser('~')
csvfile= os.path.join(userhome,"Desktop/C3PO_for_H2D2", 'complete_sinbad_photometric_.csv')
SINBADtable_file= open(csvfile, "r")
SINBADtable = csv.reader(SINBADtable_file)

    

#to get complete list of data type
"""
for row in SINBADtable:
    print row[2]
f.close
"""

#to get data from specific star/row
"""
csvFileArray = []
for row in SINBADtable:
    csvFileArray.append(row)

print(csvFileArray[0])        #index gives row
"""


#to get cell

SINBADtable = csv.reader(SINBADtable_file)
SINBADtable = list(SINBADtable)
data = SINBADtable[4][2]     #[line number][column]
print data

##Certain # of Rows
"""
Data_type= next(SINBADtable)
for row in SINBADtable:
 row[1]= next(SINBADtable)
 row[2]=next(SINBADtable_file)
 print row[2]             #Gets 4th, 7th, +3 rows until end
"""

#to fill empty spaces with NAN------ Doesn't Work YET
"""
for row in SINBADtable:
    x=row[18]
    if len(x)==0 or '~' in SINBADtable:
        x="NAN"
        print x
"""

#DEMO of filler code------ Doesn't Work YET
"""
c= ""
if len(c)==0 or '~' in c:
    c="NAN"
    
print c
"""
